
package UserInterface.WorkAreas.StudentRole;

import Business.Business;
import Business.Person.Person;
import Business.Person.PersonDirectory;
import Business.Profiles.StudentProfile;
import Business.UserAccounts.UserAccount;
import Business.UserAccounts.UserAccountDirectory;
import Business.Business;
import Business.ProfileWorkAreaMainFrame;

import info5100.university.example.Department.Department;

import javax.swing.*;
import java.awt.CardLayout;
/**
 *
 * @author shaoweili
 */
public class SignUpJPanel extends javax.swing.JPanel {
    private final JPanel mainWorkArea;
    private final Business business;
    private final Department dept;
    
    //update constructor:
    public SignUpJPanel(JPanel mainWorkArea, Business business, Department dept) {
        initComponents();
        this.mainWorkArea = mainWorkArea;
        this.business = business;
        this.dept = dept;
    }
    
    //help to ensure the model-side student exists
    private info5100.university.example.Persona.StudentProfile ensureModelStudent(String personId) {
        return ensureModelStudent(personId, null, null);
    }

    //overload that also stores first/last name in the info5100 model Person
    private info5100.university.example.Persona.StudentProfile ensureModelStudent(
            String personId, String first, String last) {

        info5100.university.example.Persona.PersonDirectory pd = dept.getPersonDirectory();
        info5100.university.example.Persona.Person mp = pd.findPerson(personId);
        if (mp == null) {
            mp = pd.newPerson(personId);
        }
        // if names were provided, keep them in the model person
        if (first != null && !first.isEmpty()) mp.setFirstName(first);
        if (last  != null && !last.isEmpty())  mp.setLastName(last);

        info5100.university.example.Persona.StudentDirectory sd = dept.getStudentDirectory();
        info5100.university.example.Persona.StudentProfile sp = sd.findStudent(personId);
        if (sp == null) {
            sp = sd.newStudentProfile(mp);
        }
        return sp;
    
    }
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblUsername1 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        lblConfirmPassword = new javax.swing.JLabel();
        txtConfirm = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        lblFirstName = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblNuid = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        txtNuid = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(850, 500));

        lblUsername.setText("Username");

        lblUsername1.setText("Password");

        lblConfirmPassword.setText("Confirm Password");

        btnCreate.setText("Create the Student Account");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        lblFirstName.setText("First Name");

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblTitle.setText("Create Your Account");

        lblNuid.setText("Student NUID");

        lblLastName.setText("Last Name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(lblTitle))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUsername)
                            .addComponent(lblUsername1)
                            .addComponent(lblConfirmPassword)
                            .addComponent(lblNuid)
                            .addComponent(lblFirstName)
                            .addComponent(lblLastName))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNuid, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(516, 516, 516))
            .addGroup(layout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(lblTitle)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFirstName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLastName))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNuid)
                    .addComponent(txtNuid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername1)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblConfirmPassword)
                    .addComponent(txtConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(btnCreate)
                .addContainerGap(130, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        createStudentAccount();
    }//GEN-LAST:event_btnCreateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JLabel lblConfirmPassword;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblNuid;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblUsername1;
    private javax.swing.JTextField txtConfirm;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtNuid;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void createStudentAccount() {
        String first    = txtFirstName.getText().trim();
        String last     = txtLastName.getText().trim(); 
        String nuid     = txtNuid.getText().trim();        // use NUID aspersonId
        String username = txtUsername.getText().trim();
        String pwd      = txtPassword.getText().trim();
        String confirm  = txtConfirm.getText().trim();

        if (first.isEmpty() || last.isEmpty() || nuid.isEmpty()
                || username.isEmpty() || pwd.isEmpty() || confirm.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill all fields.");
            return;
        }
        if (pwd.length() < 4) {
            JOptionPane.showMessageDialog(this, "Password must be at least 4 characters.");
            return;
        }
        if (!pwd.equals(confirm)) {
            JOptionPane.showMessageDialog(this, "Passwords do not match.");
            return;
        }
      
        String fullName = first + " " + last;
        createStudentAccount(fullName, nuid, username, pwd);
    }
        

    private void createStudentAccount(String fullName, String nuid, String username, String pwd) {
         // 1) Business Person
    PersonDirectory pd = business.getPersonDirectory();
    Person bp = pd.findPerson(nuid);
    if (bp == null) bp = pd.newPerson(nuid);
    try {
        bp.setFirstName(txtFirstName.getText().trim());
        bp.setLastName(txtLastName.getText().trim());
    } catch (Exception ignore) {}

    // 2) Username uniqueness check (your API)
    UserAccountDirectory uad = business.getUserAccountDirectory();
    boolean exists = false;
    for (UserAccount ua : uad.getUserAccountList()) {         
        if (ua.getUserLoginName().equals(username)) {          
            exists = true; break;
        }
    }
    if (exists) {
        JOptionPane.showMessageDialog(this, "Username already exists.");
        return;
    }

    // 3) Create StudentProfile + account (signature: newUserAccount(Profile p, String un, String pw))
    StudentProfile sp = new StudentProfile(bp);
    uad.newUserAccount(sp, username, pwd);                          // <- order matches your API

    // 4) Model mirror (Digital University Model)
    ensureModelStudent(nuid, txtFirstName.getText().trim(), txtLastName.getText().trim());

    JOptionPane.showMessageDialog(this, "Account created! Please log in.");
    goBackToLogin();
        
        }

    private void goBackToLogin() {
        
        java.awt.Container top = mainWorkArea.getTopLevelAncestor();
            if (top instanceof ProfileWorkAreaMainFrame) {
                ((ProfileWorkAreaMainFrame) top).clearLoginFields();
            }
            CardLayout cl = (CardLayout) mainWorkArea.getLayout();
            cl.show(mainWorkArea,"HOME");
    }
    }
        
