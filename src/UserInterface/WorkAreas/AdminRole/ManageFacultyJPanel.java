/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.AdminRole;

import Business.Business;
import Business.UserAccounts.UserAccount;
import java.awt.CardLayout;
import javax.swing.JPanel;
import Business.Profiles.FacultyProfile;
import UserInterface.WorkAreas.AdminRole.ManagePersonnelWorkResp.AdministerPersonJPanel;
import javax.swing.JOptionPane;

/**
 *
 * @author Li Zhang
 */
public class ManageFacultyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageFaculty
     */
    JPanel CardSequencePanel;
    UserAccount userAccount;
    Business business;
    public ManageFacultyJPanel(Business business, JPanel CardSequencePanel, UserAccount userAccount) {
        initComponents();
        this.CardSequencePanel = CardSequencePanel; 
        this.userAccount = userAccount;
        this.business = business; 
        populateTable(""); 
    }
    
    private void populateTable(String key) {
        javax.swing.table.DefaultTableModel model =
            (javax.swing.table.DefaultTableModel) UserAccountTable.getModel();
        model.setRowCount(0);

        for (UserAccount ua : business.getUserAccountDirectory().getUserAccountList()) {
            if (ua.getAssociatedPersonProfile() instanceof FacultyProfile) {

                FacultyProfile fp = (FacultyProfile) ua.getAssociatedPersonProfile();
                String nuid = fp.getPerson().getPersonId();

                if (key.isEmpty() || nuid.equalsIgnoreCase(key)) {
                    Object[] row = new Object[4];
                    row[0] = nuid;
                    row[1] = fp.getPerson().getName();
                    row[2] = ua.getUserLoginName();
                    row[3] = ua.getPassword();
                    model.addRow(row);
                }
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Back = new javax.swing.JButton();
        Next = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        UserAccountTable = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnSearchNuid = new javax.swing.JButton();
        txtSearchNuid = new javax.swing.JTextField();

        Back.setText("<< Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        Next.setText("Next >>");
        Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setText("Manage Faculty");

        UserAccountTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "NUID", "Name", "Username", "Password"
            }
        ));
        UserAccountTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                UserAccountTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(UserAccountTable);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSearchNuid.setText("Search by NUID");
        btnSearchNuid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchNuidActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Back)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete)
                        .addGap(160, 160, 160)
                        .addComponent(Next, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtSearchNuid, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearchNuid, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(9, 82, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 360, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSearchNuid)
                            .addComponent(txtSearchNuid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(41, 41, 41)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(Back)
                    .addComponent(Next))
                .addContainerGap(157, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 218, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGap(0, 264, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void UserAccountTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserAccountTableMousePressed
        // Extracts the row (uaser account) in the table that is selected by the user
//        int size = UserAccountTable.getRowCount();
//        int selectedrow = UserAccountTable.getSelectionModel().getLeadSelectionIndex();
//
//        if (selectedrow < 0 || selectedrow > size - 1) {
//            return;
//        }
//        selecteduseraccount = (UserAccount) UserAccountTable.getValueAt(selectedrow, 0);
//        if (selecteduseraccount == null) {
//            return;
    }//GEN-LAST:event_UserAccountTableMousePressed

    private void NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextActionPerformed
        // TODO add your handling code here:
        int selectedRow = UserAccountTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a faculty to update.");
            return;
        }

        String username = (String) UserAccountTable.getValueAt(selectedRow, 2);
        UserAccount selectedUA = null;
        for (UserAccount ua : business.getUserAccountDirectory().getUserAccountList()) {
            if (ua.getUserLoginName().equals(username)) {
                selectedUA = ua;
                break;
            }
        }

        if (selectedUA == null) {
            JOptionPane.showMessageDialog(this, "User not found!");
            return;
        }

        AdministerPersonJPanel panel = new AdministerPersonJPanel(business, CardSequencePanel, selectedUA, this);
        CardSequencePanel.add("AdministerPersonJPanel", panel);
        ((CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    
    }//GEN-LAST:event_NextActionPerformed

    public void refreshTable() {
        populateTable("");
    }
    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        CardLayout layout = (CardLayout)CardSequencePanel.getLayout();
        layout.previous(CardSequencePanel);
        //       ((java.awt.CardLayout)CardSequencePanel.getLayout()).show(CardSequencePanel, "IdentifyEventTypes");
    }//GEN-LAST:event_BackActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = UserAccountTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        String username = (String) UserAccountTable.getValueAt(selectedRow, 2);

        int confirm = JOptionPane.showConfirmDialog(
                this,
                "Are you sure you want to delete the faculty account: " + username + "?",
                "Confirm Delete",
                JOptionPane.YES_NO_OPTION);

        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }


        java.util.Iterator<UserAccount> iterator = business.getUserAccountDirectory().getUserAccountList().iterator();

        while (iterator.hasNext()) {
            UserAccount ua = iterator.next();
            if (ua.getUserLoginName().equals(username)
                    && ua.getAssociatedPersonProfile() instanceof FacultyProfile) {

                iterator.remove();
                JOptionPane.showMessageDialog(this, "Faculty account '" + username + "' deleted successfully!");
                break;
            }
        }


        populateTable("");

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchNuidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchNuidActionPerformed
        // TODO add your handling code here:
        String key = txtSearchNuid.getText().trim();
        if (key.isEmpty()) refreshTable();
        else refreshTable(key);
    }//GEN-LAST:event_btnSearchNuidActionPerformed

    public void refreshTable(String key) {
    populateTable(key);

    if (UserAccountTable.getRowCount() == 0) {
        javax.swing.JOptionPane.showMessageDialog(this, 
            "No faculty found with NUID: " + key +  ". Please register the Faculty");
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton Next;
    private javax.swing.JTable UserAccountTable;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSearchNuid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtSearchNuid;
    // End of variables declaration//GEN-END:variables
}
